<?php

require_once(__DIR__."/../vendor/autoload.php");

use Faker\Factory;
use Expay\Logger\Log;

/**
 * LoggerTest
 */
class LoggerTest
{  
  /**
   * faker
   *
   * @var string
   */
  private $faker="";  
  /**
   * methods
   *
   * @var string
   */
  private $methods="";  
  /**
   * message
   *
   * @var string
   */
  private $message="";
  
  /**
   * __construct
   *
   * @param  mixed $methods
   * @return void
   */
  public function __construct(array $methods)
  {
    $this->methods=$methods;
    $this->faker=Factory::create();
  }

  /**
   * getLine
   *
   * @return void
   */
  private function getLine()
  {
    $out="";
    for($l=0;$l<15;$l++)
    {
      $out.="*";
    }
    return $out;
  }
    
  /**
   * printer
   *
   * @param  mixed $case
   * @return void
   */
  private function printer(string $case)
  {
    error_log(PHP_EOL);
    $ruler=$this->getLine();
    error_log($ruler);
    error_log("$case:\n");
    Log::$case($this->faker->text);
    error_log($ruler);
    error_log(PHP_EOL);
  }
  
  /**
   * init
   *
   * @return void
   */
  public function init()
  {
    if(!empty($this->methods))
    {
      foreach($this->methods as $method)
      {
        $this->printer($method);
      }
    }else{
      error_log("Kindly provide a test case");
    }
  }
}

// check if console args exist
if (isset($argv)&&!empty($argv))
{
  // remove called file value
  unset($argv[0]);
  // call test calls and pass arguments
  $loggerTest=new LoggerTest($argv);
  $loggerTest->init();
}else{
  error_log("Kindly globalize the argument accessor in your php.ini - 'argv'");
}

// end
exit("Shutting down...\n\n");